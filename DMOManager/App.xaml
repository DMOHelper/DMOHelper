<Application x:Class="DMOHelper.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DMOHelper"
             xmlns:converter="clr-namespace:DMOHelper.Converter"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <system:Double x:Key="AppFontSize">14</system:Double>
        <system:Double x:Key="AppFontSizeHeaders">18</system:Double>
        <system:Double x:Key="ButtonSize">18</system:Double>

        <SolidColorBrush x:Key="Background" Color="#FF252525"/>
        <SolidColorBrush x:Key="ListBackground" Color="#FF0e3954"/>
        <SolidColorBrush x:Key="Foreground" Color="#FFddb45d"/>
        <SolidColorBrush x:Key="PrimaryDarkBrush" Color="#FF0e3954"/>
        <SolidColorBrush x:Key="PrimaryLightBrush" Color="#FFddb45d"/>
        <SolidColorBrush x:Key="Selected" Color="#FF454545"/>
        <SolidColorBrush x:Key="OnMouseOver" Color="#FF888888"/>

        <converter:HasSelectionConverter x:Key="HasSelectionConverter" />
        <converter:HasElementsConverter x:Key="HasElementsConverter"/>
        <converter:GetEnumDescriptionConverter x:Key="GetEnumDescriptionConverter"/>
        <converter:MultiBoolConverter x:Key="MultiBoolConverter"/>
        <converter:ViceColorConverter x:Key="ViceColorConverter"/>
        <converter:VisibilityConverter x:Key="VisibilityConverter"/>
        <converter:InvertedVisibilityConverter x:Key="InvertedVisibilityConverter"/>
        <converter:CurrencyConverter x:Key="CurrencyConverter"/>
        <converter:NullBoolConverter x:Key="NullBoolConverter"/>
        <converter:ExtremePeakEvoConverter x:Key="ExtremePeakEvoConverter"/>
        <converter:EvoMemorySkillConverter x:Key="EvoMemorySkillConverter"/>
        <converter:SkillPointsMaxLevelConverter x:Key="SkillPointsMaxLevelConverter"/>

        <Style TargetType="iconPacks:PackIconMaterial">
            <Setter Property="Width" Value="{DynamicResource ButtonSize}"/>
            <Setter Property="Height" Value="{DynamicResource ButtonSize}"/>
        </Style>

        <Style TargetType="ListView">
            <Setter Property="Foreground" Value="{StaticResource PrimaryDarkBrush}"/>
            <Setter Property="Background" Value="{StaticResource Selected}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="ListViewItem">
            <Setter Property="Foreground" Value="{StaticResource PrimaryDarkBrush}"/>
            <Setter Property="Background" Value="{StaticResource Selected}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource Selected}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <!--<Condition Property="IsSelected" Value="False"/>-->
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource Selected}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Background}"/>
                    <Setter Property="Margin" Value="0"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource Selected}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Foreground" Value="{StaticResource PrimaryDarkBrush}"/>
            <Setter Property="Background" Value="{StaticResource Selected}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource Selected}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsPressed" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource OnMouseOver}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource Selected}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource PrimaryLightBrush}"/>
            <Setter Property="Background" Value="{StaticResource Selected}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="8" BorderThickness="0" Background="{StaticResource PrimaryDarkBrush}">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Selected}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource OnMouseOver}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Selected}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryLightBrush}"/>
            <Setter Property="FontSize" Value="{DynamicResource AppFontSize}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        
        <Style TargetType="syncfusion:GridHeaderCellControl" x:Key="SfHeaderStyle">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="{StaticResource ListBackground}" />
        </Style>

        <Style TargetType="syncfusion:SfDataGrid">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBackground}"/>
        </Style>

        <Style TargetType="syncfusion:GridCell">
            <Setter Property="BorderBrush" Value="Transparent" />
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Foreground="Black" Background="Transparent"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style TargetType="ListBox">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Foreground="Black" Background="Transparent"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
            <Setter Property="Background" Value="{StaticResource Background}" />
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" Background="#EEEEEE" BorderThickness="1" BorderBrush="#404040">
                                    <Path Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="#404040" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Foreground}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#404040" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#C0C0C0" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#404040" />
                                <Setter Property="Foreground" Value="#888888"/>
                                <Setter Property="IsChecked" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
